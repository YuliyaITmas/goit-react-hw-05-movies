{"version":3,"file":"static/js/434.fb7a7f95.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nfont-size: 36px;\ncolor: #f44336;\n// text-transform: uppercase;\n`;\n\nexport const Img = styled.img`\nwidth: 100%;\nheight: auto;\n\n`;","\nimport PropTypes from 'prop-types';\nimport { ErrorWrap, Img } from './ErrorMessage.styled';\nimport  errorIMG from 'components/errorIMG.jpeg';\n\nconst ErrorMessage = ({message}) => {\n  return (\n    <ErrorWrap>\n      <Img src={errorIMG} alt=\"error\" />\n      <p>{message}</p>\n    </ErrorWrap>\n  );\n};\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n}\nexport default ErrorMessage;\n\n","import styled from 'styled-components';\n\n\n\nexport const ReviewTitle = styled.h2`\n  margin: 10px 0;\n  font-size: 18px;\n`;\nexport const ReviewList = styled.ul`\n \n  margin-bottom: 10px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: inline-block;\n  font-size: 14px;\n  margin-right: 5px;\n  margin-bottom: 5px;\n  padding: 10px 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\nexport const ReviewAuthor = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const ReviewText = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n \n`;\n","\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieAPI from 'components/services/getMovies';\nimport Loader from 'components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport {\n  ReviewTitle,\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewText,\n} from './Reviews.styled';\n\nconst movieAPI = new MovieAPI();\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n   const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setStatus(Status.PENDING);\n      try {\n        const response = await movieAPI.fetchMovieReviews(movieId);\n        setReviews(response.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        setError(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (status === Status.IDLE || status === Status.PENDING) {\n    return <Loader/>;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ErrorMessage message={error.message}  />;\n  }\n   \nif (reviews.length === 0) {\n  return <div>We don't have any reviews for this movie.</div>;\n}\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ReviewTitle>Reviews:</ReviewTitle>\n        {reviews.length > 0 ? (\n          <ReviewList>\n            {reviews.map(review => (\n              <ReviewItem key={review.id}>\n                <ReviewAuthor>Author: {review.author}</ReviewAuthor>\n                <ReviewText>{review.content}</ReviewText>\n              </ReviewItem>\n            ))}\n          </ReviewList>\n        ) : (\n          <ReviewTitle>No reviews available.</ReviewTitle>\n        )}\n      </>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nclass MovieAPI {\n  constructor(apiKey = 'cb85d4ca8ccc21148aa431fcbda6fed6') {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n    this.headers = {\n      accept: 'application/json',\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjg1ZDRjYThjY2MyMTE0OGFhNDMxZmNiZGE2ZmVkNiIsInN1YiI6IjY0NzA5MTAwMTNhMzIwMDExNmI2OTljZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.elM55nFlhNCZrZUR2Hlm6sqxpk_Q0C6eFSXrdeKsuk8`,\n    };\n  }\n\n  async fetchMovieReviews(movieId, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/reviews?language=en-US`,\n        {\n          params: { page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieCredits(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/credits?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async searchMovies(query, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/search/movie?include_adult=false&language=en-US`,\n        {\n          params: { query, page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchTrendingMovies() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/trending/all/day?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n}\n\nexport default MovieAPI;\n"],"names":["ErrorWrap","styled","Img","message","src","errorIMG","alt","ReviewTitle","ReviewList","ReviewItem","ReviewAuthor","ReviewText","movieAPI","MovieAPI","Status","movieId","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","fetchReviews","fetchMovieReviews","response","results","Loader","ErrorMessage","length","map","review","author","content","id","apiKey","this","baseURL","headers","accept","Authorization","page","axios","params","data","Error","query"],"sourceRoot":""}