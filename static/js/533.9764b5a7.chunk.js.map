{"version":3,"file":"static/js/533.9764b5a7.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/services/getMovies.js","components/TrendingMovieList/TrendingMovieList.styled.jsx","components/TrendingMovieList/TrendingMovieList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nfont-size: 36px;\ncolor: #f44336;\n// text-transform: uppercase;\n`;\n\nexport const Img = styled.img`\nwidth: 100%;\nheight: auto;\n\n`;","\nimport PropTypes from 'prop-types';\nimport { ErrorWrap, Img } from './ErrorMessage.styled';\nimport  errorIMG from 'components/errorIMG.jpeg';\n\nconst ErrorMessage = ({message}) => {\n  return (\n    <ErrorWrap>\n      <Img src={errorIMG} alt=\"error\" />\n      <p>{message}</p>\n    </ErrorWrap>\n  );\n};\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n}\nexport default ErrorMessage;\n\n","import axios from 'axios';\n\nclass MovieAPI {\n  constructor(apiKey = 'cb85d4ca8ccc21148aa431fcbda6fed6') {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n    this.headers = {\n      accept: 'application/json',\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjg1ZDRjYThjY2MyMTE0OGFhNDMxZmNiZGE2ZmVkNiIsInN1YiI6IjY0NzA5MTAwMTNhMzIwMDExNmI2OTljZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.elM55nFlhNCZrZUR2Hlm6sqxpk_Q0C6eFSXrdeKsuk8`,\n    };\n  }\n\n  async fetchMovieReviews(movieId, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/reviews?language=en-US`,\n        {\n          params: { page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieCredits(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/credits?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async searchMovies(query, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/search/movie?include_adult=false&language=en-US`,\n        {\n          params: { query, page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchTrendingMovies() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/trending/all/day?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n}\n\nexport default MovieAPI;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.li`\n  margin-bottom: 10px\n  \n`;\nexport const StyledLink = styled(Link)`\n  display: block;\n  color: #000;\n   padding: 2px 0;\n  font-size: 18px;\n  font-weight: 500;\n  transition: color 0.2s ease;\n}\n\n  &:hover {\n  color: #ff5500;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  font-size: 28px;\n`;","import Loader from 'components/Loader/Loader';\nimport MovieAPI from 'components/services/getMovies';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { List, StyledLink, Title } from './TrendingMovieList.styled';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst movieAPI = new MovieAPI();\n\nexport const TrendingMovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setStatus(Status.PENDING);\n        const response = await movieAPI.fetchTrendingMovies();\n\n        setMovies(response.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        setError(error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n  if (status === Status.PENDING) {\n    return <Loader />;\n  }\n    if (status === Status.REJECTED) {\n      return <ErrorMessage message={error.message} />;\n    }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <Title>Trending today</Title>\n        <ul>\n          {movies.map(movie => (\n            <List key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title || movie.name}\n              </StyledLink>\n            </List>\n          ))}\n        </ul>\n      </>\n    );\n  }\n};\n","import { TrendingMovieList } from \"components/TrendingMovieList/TrendingMovieList\"\n\nconst Home = () => {\n    return (\n    < TrendingMovieList/>\n)\n}\nexport default Home"],"names":["ErrorWrap","styled","Img","message","src","errorIMG","alt","MovieAPI","apiKey","this","baseURL","headers","accept","Authorization","movieId","page","axios","params","response","data","Error","query","List","StyledLink","Link","Title","Status","movieAPI","TrendingMovieList","useState","movies","setMovies","status","setStatus","error","setError","location","useLocation","useEffect","fetchTrendingMovies","results","Loader","ErrorMessage","map","movie","to","id","state","from","title","name"],"sourceRoot":""}