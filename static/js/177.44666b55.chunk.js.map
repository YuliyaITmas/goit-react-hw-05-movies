{"version":3,"file":"static/js/177.44666b55.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/services/getMovies.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nfont-size: 36px;\ncolor: #f44336;\n// text-transform: uppercase;\n`;\n\nexport const Img = styled.img`\nwidth: 100%;\nheight: auto;\n\n`;","\nimport PropTypes from 'prop-types';\nimport { ErrorWrap, Img } from './ErrorMessage.styled';\nimport  errorIMG from 'components/errorIMG.jpeg';\n\nconst ErrorMessage = ({message}) => {\n  return (\n    <ErrorWrap>\n      <Img src={errorIMG} alt=\"error\" />\n      <p>{message}</p>\n    </ErrorWrap>\n  );\n};\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n}\nexport default ErrorMessage;\n\n","import axios from 'axios';\n\nclass MovieAPI {\n  constructor(apiKey = 'cb85d4ca8ccc21148aa431fcbda6fed6') {\n    this.apiKey = apiKey;\n    this.baseURL = 'https://api.themoviedb.org/3';\n    this.headers = {\n      accept: 'application/json',\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjg1ZDRjYThjY2MyMTE0OGFhNDMxZmNiZGE2ZmVkNiIsInN1YiI6IjY0NzA5MTAwMTNhMzIwMDExNmI2OTljZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.elM55nFlhNCZrZUR2Hlm6sqxpk_Q0C6eFSXrdeKsuk8`,\n    };\n  }\n\n  async fetchMovieReviews(movieId, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/reviews?language=en-US`,\n        {\n          params: { page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieCredits(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}/credits?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/movie/${movieId}?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async searchMovies(query, page = 1) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/search/movie?include_adult=false&language=en-US`,\n        {\n          params: { query, page },\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async fetchTrendingMovies() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}/trending/all/day?language=en-US`,\n        {\n          headers: this.headers,\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n}\n\nexport default MovieAPI;\n","import styled from '@emotion/styled';\n\n\nexport const Search = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ccc;\n`;\n\nexport const ButtonSearch = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n&hover:\nopacity: 1;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n","\n\nimport PropTypes from 'prop-types';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { useState } from 'react';\nimport { ButtonSearch, Input, Search } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleChange = event => {\n    setSearchValue(event.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchValue.trim() === '') {\n      return;\n    }\n    onSubmit(searchValue.trim());\n    \n \n  };\n\n  return (\n    <Search onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={searchValue}\n        onChange={handleChange}\n        placeholder=\"Enter a keyword\"\n      />\n      <ButtonSearch type=\"submit\">\n        \n        <BiSearchAlt2 size=\"26\" />\n     \n      </ButtonSearch>\n    </Search>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesItem = styled.li`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\nexport const MoviesList = styled.ul`\n  margin-bottom: 10px;\n`;\nexport const MoviesStyledLink = styled(Link)`\n  display: block;\n  color: #000;\n   padding: 2px 0;\n  font-size: 18px;\n  font-weight: 500;\n  transition: color 0.2s ease;\n}\n\n  &:hover {\n  color: #ff5500;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  font-size: 28px;\n`;\n\nexport const MoviesButton = styled.button`\n  display: inline-block;\n  width: 220px;\n\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #f0f0f0;\n  color: #333;\n  text-decoration: none;\n  coursor:pointer;\n  border: none;\n  margin-top: 10px;\n  margin-right: 20px;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n  box-shadow: 2px 4px 6px rgba(0, 0, 0, 0.1);\n  &:hover {\n    background-color: #e0e0e0;\n   \n  }\n`;","import { useState, useEffect } from 'react';\nimport MovieAPI from 'components/services/getMovies';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport {\n  MoviesButton,\n  MoviesList,\n  MoviesStyledLink,\n  MoviesItem,\n} from './Movies.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst movieAPI = new MovieAPI();\n\nconst options = {\n  width: '320px',\n  fontSize: '20px',\n  clickToClose: true,\n  position: 'right-top',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 3000,\n  showOnlyTheLastOne: true,\n  pauseOnHover: true,\n};\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie') ?? '';\n  const page = Number(searchParams.get('page')) || 1;\n\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const [isSearchExecuted, setIsSearchExecuted] = useState(false);\n  const location = useLocation();\n\n  const handleSearch = value => {\n    if (value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movie: value, page: 1 });\n  };\n\n  const searchMoviesAPI = async () => {\n    try {\n      const response = await movieAPI.searchMovies(movie, page);\n      setIsSearchExecuted(true);\n      setStatus(Status.PENDING);\n\n      if (response.results.length === 0 && movie) {\n        setStatus(Status.RESOLVED);\n        Notify.warning(`No movies found.`, options);\n        setMovies([]); // Сброс результатов поиска\n        setTotalPages(0);\n      } else {\n        setMovies(response.results);\n        setTotalPages(response.total_pages);\n        setStatus(Status.RESOLVED);\n      }\n    } catch (error) {\n      setStatus(Status.REJECTED);\n      setError(error);\n    }\n  };\n\n  useEffect(() => {\n    searchMoviesAPI();\n    // eslint-disable-next-line\n  }, [movie, page]);\n\n  const showPagination = movies && movies.length > 0;\n\n  const handleNextPage = () => {\n    if (page < totalPages) {\n      setSearchParams({ movie, page: page + 1 });\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (page > 1) {\n      setSearchParams({ movie, page: page - 1 });\n    }\n  };\n\n  if (status === Status.REJECTED) {\n    return <ErrorMessage  message={error.message} />;\n  }\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSearch} />\n      <div>\n        {status === Status.PENDING && isSearchExecuted && <Loader />}\n        {status === Status.RESOLVED && showPagination && (\n          <>\n            <MoviesList>\n              {movies.map(movie => (\n                <MoviesItem key={movie.id}>\n                  <MoviesStyledLink\n                    to={`${movie.id}`}\n                    state={{ from: location }}\n                  >\n                    {movie.title || movie.name}\n                  </MoviesStyledLink>\n                </MoviesItem>\n              ))}\n            </MoviesList>\n\n            {totalPages > 0 && (\n              <div>\n                <p>\n                  Page {page} of {totalPages}\n                </p>\n                {page > 1 && (\n                  <MoviesButton onClick={handlePreviousPage}>\n                    Previous Page\n                  </MoviesButton>\n                )}\n                {page < totalPages && (\n                  <MoviesButton onClick={handleNextPage}>\n                    Next Page\n                  </MoviesButton>\n                )}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["ErrorWrap","styled","Img","message","src","errorIMG","alt","MovieAPI","apiKey","this","baseURL","headers","accept","Authorization","movieId","page","axios","params","response","data","Error","query","Search","ButtonSearch","Input","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","trim","type","value","onChange","currentTarget","toLowerCase","placeholder","size","MoviesItem","MoviesList","MoviesStyledLink","Link","MoviesButton","Status","movieAPI","options","width","fontSize","clickToClose","position","distance","borderRadius","timeout","showOnlyTheLastOne","pauseOnHover","useSearchParams","searchParams","setSearchParams","movie","get","Number","movies","setMovies","totalPages","setTotalPages","status","setStatus","error","setError","isSearchExecuted","setIsSearchExecuted","location","useLocation","searchMoviesAPI","searchMovies","results","length","Notify","total_pages","useEffect","showPagination","ErrorMessage","Loader","map","to","id","state","from","title","name","onClick"],"sourceRoot":""}