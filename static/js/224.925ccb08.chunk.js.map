{"version":3,"file":"static/js/224.925ccb08.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.styled.jsx","components/AdditionalInformation/AdditionalInformation.styled.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  gap:20px;\n  flex-direction: row;\n  align-items: center;\n  padding: 20px;\n    margin: 20px 20px 20px 0;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 780px\n  & > div:first-child {\n  flex: 0 0 auto;\n  margin-right: 20px;\n  margin-bottom: 20px;\n}\n&> div:last-child {\n  flex: 1 1 auto;\n}\n`;\n\nexport const Title = styled.h1`\n  font-size: 18px;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: auto;\n  // object-fit: cover;\n  margin-bottom: 10px;\n`;\n\nexport const Rating = styled.p`\n  font-weight: bold;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: bold;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.ul`\n \n  margin-bottom: 10px;\n`;\n\nexport const Genre = styled.li`\n  display: inline-block;\n  font-size: 14px;\n  margin-right: 5px;\n  padding: 5px 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\n\nexport const Subtitle = styled.h2`\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n\n\nexport const Info = styled.div`\n  width: 400px\n`;\n","import PropTypes from 'prop-types';\nimport notFound from 'components/ nofoundimage.jpeg';\nimport {\n  GenresList,\n  Image,\n  Rating,\n  ReleaseDate,\n  Title,\n  Genre,\n  Overview,\n  Card,\n  Subtitle,\n  Info,\n} from './MovieCard.styled';\n\nconst MovieCard = ({\n  title,\n  poster_path,\n  genres,\n  vote_average,\n  release_date,\n  overview,\n}) => {\n  const ratingPercentage = (vote_average * 10).toFixed();\n  return (\n    <Card>\n      <div>\n        <Title>{title}</Title>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `${ notFound }`\n          }\n          alt={title}\n        />\n      </div>\n      <Info>\n        <Rating>Rating: {ratingPercentage}%</Rating>\n        <ReleaseDate>Release date: {release_date}</ReleaseDate>\n        <Subtitle>Genres:</Subtitle>\n        <GenresList>\n          {genres.map(genre => (\n            <Genre key={genre.id}>{genre.name}</Genre>\n          ))}\n        </GenresList>\n\n        <Subtitle>Overview:</Subtitle>\n        <Overview>{overview}</Overview>\n      </Info>\n    </Card>\n  );\n};\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  vote_average: PropTypes.number.isRequired,\n  release_date: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  width: 120px;\n\n  // margin-right: auto;\n  gap: 5px;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #f0f0f0;\n  color: #333;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n  box-shadow: 2px 4px 6px rgba(0, 0, 0, 0.1);\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n","\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left:20px\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  min-width: 120px;\n\n  padding: 10px 20px;\n  background-color: #f0f0f0;\n  color: #333;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n  box-shadow: 2px 4px 6px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n  &:last-child {\n    margin-bottom: 10px;\n  }\n`;\n","\nimport { List, ListItem, StyledLink, Title } from './AdditionalInformation.styled'\n\nconst AdditionalInformatin = () => {\n    return (\n     <>\n            <Title>Additional information</Title>\n            <List>\n              <ListItem>\n                <StyledLink to={`cast`}>Cast</StyledLink>\n              </ListItem>\n              <li>\n                <StyledLink to={`reviews`}>Reviews</StyledLink>\n              </li>\n            </List>\n     </>\n    )\n}\n\nexport default AdditionalInformatin","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { CgArrowLongLeft } from 'react-icons/cg';\nimport MovieAPI from 'components/services/getMovies';\nimport { Suspense, useEffect, useState } from 'react';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useRef } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nimport { StyledLink } from './MovieDetails.styled';\nimport AdditionalInformatin from 'components/AdditionalInformation/AdditionalInformation';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nconst movieAPI = new MovieAPI();\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n   const [status, setStatus] = useState(Status.IDLE);\n  const location = useLocation();\n  //  const backLink = location.state?.from ?? '/';\n\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setStatus(Status.PENDING);\n        const response = await movieAPI.fetchMovieDetails(movieId);\n\n        setMovie(response);\n          setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        setError(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  \n  if (status === Status.PENDING) {\n    return <Loader/>;\n  }\n  if (status === Status.REJECTED) {\n    return <ErrorMessage message={error.message} />;\n  }\n\n  \n  if (status === Status.RESOLVED) {\n    const { title, poster_path, genres, vote_average, release_date, overview } =\n    movie;\n    \n    return (\n      \n      <>\n        <StyledLink to={backLinkLocation.current}>\n          <CgArrowLongLeft />\n          Go back\n        </StyledLink>\n        <div>\n          <MovieCard\n            title={title}\n            poster_path={poster_path}\n            genres={genres}\n            vote_average={vote_average}\n            release_date={release_date}\n            overview={overview}\n          />\n\n          <AdditionalInformatin />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default MovieDetails;\n"],"names":["Card","styled","Title","Image","Rating","ReleaseDate","GenresList","Genre","Overview","Subtitle","Info","title","poster_path","genres","vote_average","release_date","overview","ratingPercentage","toFixed","src","notFound","alt","map","genre","name","id","StyledLink","Link","List","ListItem","to","movieAPI","MovieAPI","Status","movieId","useParams","useState","movie","setMovie","error","setError","status","setStatus","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieDetails","response","Loader","ErrorMessage","message","current","Suspense","fallback"],"sourceRoot":""}